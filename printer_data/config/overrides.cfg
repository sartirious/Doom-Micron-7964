############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine

##PID_CALIBRATE HEATER=extruder TARGET=170
##PID_CALIBRATE HEATER=heater_bed TARGET=60


[extruder]
rotation_distance: 47.088
control: pid
pid_Kp=27.873 
pid_Ki=3.792 
pid_Kd=51.216
sensor_type: PT1000
pullup_resistor: 1000
min_extrude_temp: 20
pressure_advance: 0.038
pressure_advance_smooth_time: 0.040

[heater_bed]
control: pid
pid_kp: 38.771
pid_ki: 1.746
pid_kd: 215.177
heater_pin: E_HEATER
#sensor_type: NTC 100K MGB18-104F39050L32
#sensor_pin: BED_TEMPERATURE
#pid_Kp=57.417 pid_Ki=2.835 pid_Kd=290.672

[stepper_x]
rotation_distance: 32
# microsteps: 32
# full_steps_per_rotation: 200
position_min: 0
position_endstop: 180
position_max: 180


[stepper_y]
dir_pin: !Y_DIR
rotation_distance: 32
position_min: 0
position_endstop: 180
position_max: 180

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z]
rotation_distance: 32
gear_ratio: 64:16
position_max: 165
position_min: -5

[stepper_z1]
dir_pin: !Z1_DIR
rotation_distance: 32
gear_ratio: 64:16

[stepper_z2]
rotation_distance: 32
gear_ratio: 64:16

[stepper_z3]
dir_pin: !Z3_DIR

#----------------------------------------#
#    Mellow SHT36 v3.x pins remapping    #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: !toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE

[tmc2209 extruder]
run_current: 0.6

#[probe]
#pin: ^toolhead:PROBE_INPUT

[fan]
pin: toolhead:E_FAN
#pin: toolhead:PART_FAN


[heater_fan hotend_fan]
#pin: toolhead:E_FAN
pin: toolhead:PART_FAN

#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
#-------------------------#
# config/hardware/probes/voron_tap.cfg
#-------------------------#
[probe]
#pin: ^PROBE_INPUT
#speed: 5
#lift_speed: 20
#samples: 3
#samples_result: median
#sample_retract_dist: 1.0
#samples_tolerance: 0.01
#samples_tolerance_retries: 5
z_offset: -0.860

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
[quad_gantry_level]
##  Gantry Corners for Micron+ Build
##  Uncomment for Micron+ build
gantry_corners:
   -60.2,-10.4
   244.1,234.5
##  Probe points
points:
   20,20
   20,160
   160,160
   160,20
#horizontal_move_z: 3

[bed_mesh]
#speed: 350
#horizontal_move_z: 20
#mesh_min: 30, 30
#mesh_max: 170, 170
#probe_count: 5, 5
#fade_start: 0.6
#fade_end: 10.0
#algorithm: bicubic
#zero_reference_position: 90, 90

#-------------------------#
# bedfans.cfg
#-------------------------#
[include bedfans.cfg]

#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

[gcode_macro _USER_VARIABLES]
#variable_status_leds_enabled: True
#variable_status_leds_effects_enabled: False
#variable_status_leds_logo_led_name: "status_leds"
variable_status_leds_logo_idx: '3'
#variable_status_leds_nozzle_led_name: "status_leds"
variable_status_leds_nozzle_idx: '2,1'
gcode:

[neopixel status_leds]
# pin: STATUS_NEOPIXEL
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
color_order: GRBW
#color_order: RGB
#color_order: RGBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#
